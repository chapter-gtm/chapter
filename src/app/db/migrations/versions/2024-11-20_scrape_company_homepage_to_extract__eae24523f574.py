# type: ignore
"""Scrape company homepage to extract social, docs and blog urls

Revision ID: eae24523f574
Revises: 17c73d0a7695
Create Date: 2024-11-20 19:51:50.462282+00:00

"""
from __future__ import annotations

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from alembic import op
from advanced_alchemy.types import EncryptedString, EncryptedText, GUID, ORA_JSONB, DateTimeUTC
from sqlalchemy import Text  # noqa: F401

if TYPE_CHECKING:
    from collections.abc import Sequence

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText

# revision identifiers, used by Alembic.
revision = "eae24523f574"
down_revision = "17c73d0a7695"
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()


def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()


def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("company", schema=None) as batch_op:
        batch_op.add_column(sa.Column("blog_url", sa.String(length=2083), nullable=True))
        batch_op.add_column(sa.Column("github_url", sa.String(length=2083), nullable=True))
        batch_op.add_column(sa.Column("discord_url", sa.String(length=2083), nullable=True))
        batch_op.add_column(sa.Column("slack_url", sa.String(length=2083), nullable=True))
        batch_op.add_column(sa.Column("twitter_url", sa.String(length=2083), nullable=True))
        batch_op.create_unique_constraint(batch_op.f("uq_company_discord_url"), ["discord_url"])
        batch_op.create_unique_constraint(batch_op.f("uq_company_github_url"), ["github_url"])
        batch_op.create_unique_constraint(batch_op.f("uq_company_slack_url"), ["slack_url"])
        batch_op.create_unique_constraint(batch_op.f("uq_company_twitter_url"), ["twitter_url"])

    # ### end Alembic commands ###


def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("company", schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_company_twitter_url"), type_="unique")
        batch_op.drop_constraint(batch_op.f("uq_company_slack_url"), type_="unique")
        batch_op.drop_constraint(batch_op.f("uq_company_github_url"), type_="unique")
        batch_op.drop_constraint(batch_op.f("uq_company_discord_url"), type_="unique")
        batch_op.drop_column("twitter_url")
        batch_op.drop_column("slack_url")
        batch_op.drop_column("discord_url")
        batch_op.drop_column("github_url")
        batch_op.drop_column("blog_url")

    # ### end Alembic commands ###


def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""


def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
