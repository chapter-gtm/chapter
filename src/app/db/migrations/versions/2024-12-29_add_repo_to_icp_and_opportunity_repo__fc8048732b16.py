# type: ignore
"""Add repo to icp and opportunity repo relation

Revision ID: fc8048732b16
Revises: 231be9e49e29
Create Date: 2024-12-29 17:10:30.829322+00:00

"""
from __future__ import annotations

import warnings
from typing import TYPE_CHECKING

import sqlalchemy as sa
from alembic import op
from advanced_alchemy.types import EncryptedString, EncryptedText, GUID, ORA_JSONB, DateTimeUTC
from sqlalchemy import Text  # noqa: F401

from app.db.models.custom_types import RepoCriteriaType

if TYPE_CHECKING:
    from collections.abc import Sequence

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB
sa.EncryptedString = EncryptedString
sa.EncryptedText = EncryptedText

# revision identifiers, used by Alembic.
revision = "fc8048732b16"
down_revision = "231be9e49e29"
branch_labels = None
depends_on = None


def upgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()


def downgrade() -> None:
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()


def schema_upgrades() -> None:
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("icp", schema=None) as batch_op:
        batch_op.add_column(sa.Column("repo", RepoCriteriaType(), nullable=True))

    op.create_table(
        "opportunity_repo_relation",
        sa.Column("opportunity_id", sa.GUID(length=16), nullable=False),
        sa.Column("repo_id", sa.GUID(length=16), nullable=False),
        sa.Column("tenant_id", sa.GUID(length=16), nullable=False),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenant.id"],
            name=op.f("fk_opportunity_repo_relation_tenant_id_tenant"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["repo_id"],
            ["repo.id"],
            name=op.f("fk_opportunity_repo_relation_repo_id_repo"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["opportunity.id"],
            name=op.f("fk_opportunity_repo_relation_opportunity_id_opportunity"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("opportunity_id", "repo_id", name=op.f("pk_opportunity_repo_relation")),
    )

    # ### end Alembic commands ###


def schema_downgrades() -> None:
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("opportunity_repo_relation")

    with op.batch_alter_table("icp", schema=None) as batch_op:
        batch_op.drop_column("repo")

    # ### end Alembic commands ###


def data_upgrades() -> None:
    """Add any optional data upgrade migrations here!"""


def data_downgrades() -> None:
    """Add any optional data downgrade migrations here!"""
